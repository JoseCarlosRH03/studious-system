// <auto-generated />
using System;
using FleetTechAPI.Services.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FleetTechAPI.Migrations
{
    [DbContext(typeof(DataService))]
    [Migration("20230907010128_innit")]
    partial class innit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("FleetTechCore.Models.Address.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("StateId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santo Domingo",
                            StateId = 5,
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Boca Chica",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Los Alcarrizos",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedro Brand",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Antonio de Guerra",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santo Domingo Este",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santo Domingo Norte",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santo Domingo Oeste",
                            StateId = 31,
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Puerto Plata",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Altamira",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Guananico",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Imbert",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Los Hidalgos",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Luperón",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sosúa",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Villa Isabela",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Villa Montellano",
                            StateId = 22,
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Baitoa",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Jánico",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Licey al Medio",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Puñal",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sabana Iglesia",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San José de las Matas",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santiago",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tamboril",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Villa Bisonó",
                            StateId = 29,
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Villa González",
                            StateId = 29,
                            Status = 0
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Demonym")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Dominicano (a)",
                            Name = "Republica Dominicana",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Estadounidense",
                            Name = "Estados Unidos",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Canadiense",
                            Name = "Canada",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Mexicano (a)",
                            Name = "Mexico",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Haitiano (a)",
                            Name = "Haiti",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Puertorricense",
                            Name = "Puerto Rico",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Chino (a)",
                            Name = "China",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Venezolano (a)",
                            Name = "Venezuela",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Demonym = "Colombiano (a)",
                            Name = "Colombia",
                            Status = 0
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Azua",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bahoruco",
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Barahona",
                            Status = 0
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dajabón",
                            Status = 0
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Distrito Nacional",
                            Status = 0
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Duarte",
                            Status = 0
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Elías Piña",
                            Status = 0
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "El Seibo",
                            Status = 0
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Espaillat",
                            Status = 0
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hato Mayor",
                            Status = 0
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Hermanas Mirabal",
                            Status = 0
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Independencia",
                            Status = 0
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Altagracia",
                            Status = 0
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Romana",
                            Status = 0
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "La Vega",
                            Status = 0
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "María Trinidad Sánchez",
                            Status = 0
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monseñor Nouel",
                            Status = 0
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monte Cristi",
                            Status = 0
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Monte Plata",
                            Status = 0
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pedernales",
                            Status = 0
                        },
                        new
                        {
                            Id = 21,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Peravia",
                            Status = 0
                        },
                        new
                        {
                            Id = 22,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Puerto Plata",
                            Status = 0
                        },
                        new
                        {
                            Id = 23,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Samaná",
                            Status = 0
                        },
                        new
                        {
                            Id = 24,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Cristóbal",
                            Status = 0
                        },
                        new
                        {
                            Id = 25,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San José de Ocoa",
                            Status = 0
                        },
                        new
                        {
                            Id = 26,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Juan",
                            Status = 0
                        },
                        new
                        {
                            Id = 27,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "San Pedro de Macorís",
                            Status = 0
                        },
                        new
                        {
                            Id = 28,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sánchez Ramírez",
                            Status = 0
                        },
                        new
                        {
                            Id = 29,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santiago",
                            Status = 0
                        },
                        new
                        {
                            Id = 30,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santiago Rodríguez",
                            Status = 0
                        },
                        new
                        {
                            Id = 31,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Santo Domingo",
                            Status = 0
                        },
                        new
                        {
                            Id = 32,
                            CountryId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Valverde",
                            Status = 0
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BranchTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Locality")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BranchTypeId");

                    b.HasIndex("CityId");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.BranchType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BranchTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Comercial"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tecnica"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AddressLine1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("TEXT");

                    b.Property<string>("AddressLine3")
                        .HasColumnType("TEXT");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("CompanySettingsId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TaxRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UsernamePrefix")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("CompanySettingsId");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddressLine1 = "Ave. Abraham Lincoln",
                            AddressLine2 = "Edificio Blue Mall",
                            AddressLine3 = "Piso 23",
                            CityId = 1,
                            Code = "DT",
                            CompanySettingsId = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "ppe@prueba.com",
                            Name = "DobarTec",
                            Phone = "8095864007",
                            PostalCode = "10130",
                            Region = "",
                            TaxRegistrationNumber = "9999"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.CompanySetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("DatePattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("TimePattern")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TimeZone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("CompanySettings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000001"),
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DatePattern = "dd/MM/yyyy",
                            TimePattern = "hh:mm tt",
                            TimeZone = "America/Santo_Domingo"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Extensions.Extension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Extensions");
                });

            modelBuilder.Entity("FleetTechCore.Models.Extensions.ExtensionProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("ExtensionId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ExtensionId");

                    b.ToTable("ExtensionProperties");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,6)");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Materials");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.MaterialConsumption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("BrigadeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.ToTable("MaterialConsumptions");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.MaterialExistence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,6)");

                    b.Property<int>("MaterialId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid?>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("MaterialId");

                    b.HasIndex("UserId");

                    b.ToTable("MaterialExistences");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionAreaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionTypeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionAreaId");

                    b.HasIndex("PermissionTypeId");

                    b.ToTable("Permissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionAreaId = 1,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            PermissionAreaId = 1,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 3,
                            PermissionAreaId = 1,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 4,
                            PermissionAreaId = 1,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 5,
                            PermissionAreaId = 1,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 6,
                            PermissionAreaId = 1,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 7,
                            PermissionAreaId = 2,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 8,
                            PermissionAreaId = 2,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            PermissionAreaId = 2,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            PermissionAreaId = 2,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 11,
                            PermissionAreaId = 2,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 12,
                            PermissionAreaId = 2,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 13,
                            PermissionAreaId = 3,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 14,
                            PermissionAreaId = 3,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 15,
                            PermissionAreaId = 3,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 16,
                            PermissionAreaId = 3,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 17,
                            PermissionAreaId = 3,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 18,
                            PermissionAreaId = 3,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 19,
                            PermissionAreaId = 4,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 20,
                            PermissionAreaId = 4,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 21,
                            PermissionAreaId = 4,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 22,
                            PermissionAreaId = 4,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 23,
                            PermissionAreaId = 4,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 24,
                            PermissionAreaId = 4,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 25,
                            PermissionAreaId = 5,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 26,
                            PermissionAreaId = 5,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 27,
                            PermissionAreaId = 5,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 28,
                            PermissionAreaId = 5,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 29,
                            PermissionAreaId = 5,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 30,
                            PermissionAreaId = 5,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 31,
                            PermissionAreaId = 6,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 32,
                            PermissionAreaId = 6,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 33,
                            PermissionAreaId = 6,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 34,
                            PermissionAreaId = 6,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 35,
                            PermissionAreaId = 6,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 36,
                            PermissionAreaId = 6,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 37,
                            PermissionAreaId = 7,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 38,
                            PermissionAreaId = 7,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 39,
                            PermissionAreaId = 7,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 40,
                            PermissionAreaId = 7,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 41,
                            PermissionAreaId = 7,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 42,
                            PermissionAreaId = 7,
                            PermissionTypeId = 6
                        },
                        new
                        {
                            Id = 43,
                            PermissionAreaId = 8,
                            PermissionTypeId = 1
                        },
                        new
                        {
                            Id = 44,
                            PermissionAreaId = 8,
                            PermissionTypeId = 2
                        },
                        new
                        {
                            Id = 45,
                            PermissionAreaId = 8,
                            PermissionTypeId = 3
                        },
                        new
                        {
                            Id = 46,
                            PermissionAreaId = 8,
                            PermissionTypeId = 4
                        },
                        new
                        {
                            Id = 47,
                            PermissionAreaId = 8,
                            PermissionTypeId = 5
                        },
                        new
                        {
                            Id = 48,
                            PermissionAreaId = 8,
                            PermissionTypeId = 6
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.PermissionArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PermissionAreas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Companies"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Users"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Roles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Permissions"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Cities"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Countries"
                        },
                        new
                        {
                            Id = 7,
                            Name = "States"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Extensions"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.PermissionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PermissionTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Create"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Read"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Delete"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Special"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Report"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cajero"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Atención al Cliente"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Enc. Comercial"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Analista de Recaudo"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Enc. de Recaudo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Enc. de Facturación"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PermissionId = 108,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 2,
                            PermissionId = 156,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            PermissionId = 158,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 4,
                            PermissionId = 159,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 5,
                            PermissionId = 78,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 6,
                            PermissionId = 208,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BranchId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateLastLogin")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateLastLoginFieldService")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DateLastPasswordChange")
                        .HasColumnType("TEXT");

                    b.Property<string>("Document")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Phone")
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePicture")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("00000000-0000-0000-0000-000000000001"),
                            AccessFailedCount = 0,
                            DateCreated = new DateTime(2023, 9, 6, 21, 1, 27, 902, DateTimeKind.Local).AddTicks(9041),
                            Email = "superadmin@gmail.com",
                            FirstName = "Super",
                            LastName = "Admin",
                            PasswordHash = "AQAAAAIAAYagAAAAEMlXjko85j6Z15UMHVZfWQVq995dpnsgDe0OQnfDXQhoOf4fgYa089sPCNapPkHnxg==",
                            Phone = "(829) 123-4567",
                            Status = 1,
                            Username = "superadmin"
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.User.UserPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PermissionId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleId = 1,
                            UserId = new Guid("00000000-0000-0000-0000-000000000001")
                        });
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.City", b =>
                {
                    b.HasOne("FleetTechCore.Models.Address.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.State", b =>
                {
                    b.HasOne("FleetTechCore.Models.Address.Country", "Country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.Branch", b =>
                {
                    b.HasOne("FleetTechCore.Models.Company.BranchType", "BranchType")
                        .WithMany()
                        .HasForeignKey("BranchTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.Address.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("BranchType");

                    b.Navigation("City");
                });

            modelBuilder.Entity("FleetTechCore.Models.Company.Company", b =>
                {
                    b.HasOne("FleetTechCore.Models.Address.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.Company.CompanySetting", "CompanySettings")
                        .WithMany()
                        .HasForeignKey("CompanySettingsId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("City");

                    b.Navigation("CompanySettings");
                });

            modelBuilder.Entity("FleetTechCore.Models.Extensions.ExtensionProperty", b =>
                {
                    b.HasOne("FleetTechCore.Models.Extensions.Extension", "Extension")
                        .WithMany("Properties")
                        .HasForeignKey("ExtensionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Extension");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.MaterialConsumption", b =>
                {
                    b.HasOne("FleetTechCore.Models.Inventory.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Material");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.MaterialExistence", b =>
                {
                    b.HasOne("FleetTechCore.Models.Inventory.Material", "Material")
                        .WithMany("Existences")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.User.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Material");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.Permission", b =>
                {
                    b.HasOne("FleetTechCore.Models.User.PermissionArea", "PermissionArea")
                        .WithMany()
                        .HasForeignKey("PermissionAreaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.User.PermissionType", "PermissionType")
                        .WithMany()
                        .HasForeignKey("PermissionTypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("PermissionArea");

                    b.Navigation("PermissionType");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.RolePermission", b =>
                {
                    b.HasOne("FleetTechCore.Models.User.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.User.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.User", b =>
                {
                    b.HasOne("FleetTechCore.Models.Company.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.UserPermission", b =>
                {
                    b.HasOne("FleetTechCore.Models.User.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.User.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.UserRole", b =>
                {
                    b.HasOne("FleetTechCore.Models.User.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("FleetTechCore.Models.User.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("FleetTechCore.Models.Address.State", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("FleetTechCore.Models.Extensions.Extension", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("FleetTechCore.Models.Inventory.Material", b =>
                {
                    b.Navigation("Existences");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.Role", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("FleetTechCore.Models.User.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
